<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>November 2018 ISO C++ meeting trip report (Core Language)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/opNrdnaWKik/" /><category term="C standardization" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="iso" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Red Hat Developer Toolset" scheme="searchisko:content:tags" /><author><name>Jason Merrill</name></author><id>searchisko:content:id:jbossorg_blog-november_2018_iso_c_meeting_trip_report_core_language</id><updated>2019-02-15T13:00:38Z</updated><published>2019-02-15T13:00:38Z</published><content type="html">&lt;p&gt;The ISO C++ standards meeting in November 2018 was held in San Diego, CA. As usual, Red Hat sent three of us to the meeting: me (for the Core Language Working Group), Jonathan Wakely (for the Library Working Group [LEWG]), and Thomas Rodgers (for the Concurrency and Parallelism Study Group [SG1]). I felt the meeting was productive, though some features that had been expected to make it into C++20 are now in question.&lt;/p&gt; &lt;p&gt;Here are new C++ features accepted at the meeting:&lt;span id="more-557297"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Expanded constexpr: Constant expressions can now include &lt;a href="http://wg21.link/p1002r1"&gt;try blocks&lt;/a&gt; (in a constexpr function), &lt;a href="http://wg21.link/p1327r1"&gt;dynamic_cast&lt;/a&gt;, and typeid, but only if they wouldn&amp;#8217;t throw an exception. Throwing an expression still makes the expression non-constant. Constant expressions can now also &lt;a href="http://wg21.link/p1330r0"&gt;change the active member&lt;/a&gt; of a union created during constant evaluation.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p0482r6"&gt;char8_t&lt;/a&gt;: A specific type for UTF-8 code units that also doesn&amp;#8217;t have the aliasing issues of the C char type.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1073r3"&gt;immediate functions (&amp;#8220;consteval&amp;#8221;)&lt;/a&gt;: A stronger form of constexpr functions that are always immediately evaluated for a constant value. I&amp;#8217;m still not convinced this is a sufficiently useful distinction from normal constexpr functions, but others seem rather keen on it.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p0595r2"&gt;std::is_constant_evaluated()&lt;/a&gt;: Allows constexpr functions to use one implementation during constant evaluation and a more efficient but non-constexpr implementation during runtime evaluation.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1094r2"&gt;Nested inline namespaces&lt;/a&gt;: Adds support for declaring inline namespaces to the C++ nested namespace definition feature.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1141r2"&gt;&amp;#8220;Constrained auto&amp;#8221;&lt;/a&gt;: Most significantly reintroduces abbreviated function templates from the Concepts TS with somewhat different syntax; instead of declaring a function parameter of constrained generic type with just the name of a type concept, you do it with the concept followed by &amp;#8220;auto&amp;#8221;, for example: &lt;pre&gt;auto f(Copyable auto x) { return x; }&lt;/pre&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here are various other proposals we discussed at the meeting:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://wg21.link/p0881r3"&gt;P0881R3&lt;/a&gt;, a new proposal for a stack trace library: This seemed to Core like it was going too far toward reflection; the design needs more time to bake.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1103r2"&gt;P1103R2&lt;/a&gt;, Merging Modules: The unified module design continues to progress and is expected to make it into the working paper at the next meeting.&lt;/li&gt; &lt;li&gt;Two papers about operator &amp;#60;=&amp;#62; (&amp;#8220;spaceship&amp;#8221;), P1185 and P1186: &lt;ul&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1185"&gt;1185&lt;/a&gt; points out that an == operator that just calls the &amp;#60;=&amp;#62; operator can be significantly slower than one written to call == for the subobjects. The design is still somewhat in flux, but there seems to be a strong consensus that we want to change this and change non-type template arguments of class type to depend on == rather than &amp;#60;=&amp;#62;.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1186"&gt;1186&lt;/a&gt; proposes allowing defaulted &amp;#60;=&amp;#62; to use existing &amp;#60; and == operators, since most existing classes don&amp;#8217;t themselves have &amp;#60;=&amp;#62;.  But this ran into trouble; for more details, see the &lt;a href="https://brevzin.github.io/c++/2018/11/12/improve-spaceship/"&gt;author&amp;#8217;s post&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With these issues arising, people have become uncertain whether &amp;#60;=&amp;#62; is actually ready to be part of C++20, but it seems to me that there&amp;#8217;s enough time left to resolve things.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p1328r0"&gt;P1328R0&lt;/a&gt;, making type_info::operator== constexpr: This seemed like an obvious fix to me.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt; We even found the time to talk about submitted issues between the papers. Many were of limited interest to folks outside the committee, but &lt;a href="http://wg21.link/cwg2362"&gt;issue 2362&lt;/a&gt; argues that __func__ should be constexpr. Core is inclined to move in the opposite direction, by changing its type from array to pointer, in order to avoid making the size of the name usable in a constant-expression. On reflection now, I&amp;#8217;m not sure this is such a good idea; there are plenty of ways to get an ODR violation, and I&amp;#8217;m not sure this one would be bad enough to prevent uses that people want for it. We referred this issue to Evolution for input.&lt;/p&gt; &lt;p&gt;The next meeting will be in Kailua-Kona, Hawaii, in February.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#38;linkname=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F15%2Fnovember-2018-iso-c-meeting-trip-report-core-language%2F&amp;#038;title=November%202018%20ISO%20C%2B%2B%20meeting%20trip%20report%20%28Core%20Language%29" data-a2a-url="https://developers.redhat.com/blog/2019/02/15/november-2018-iso-c-meeting-trip-report-core-language/" data-a2a-title="November 2018 ISO C++ meeting trip report (Core Language)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/02/15/november-2018-iso-c-meeting-trip-report-core-language/"&gt;November 2018 ISO C++ meeting trip report (Core Language)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/opNrdnaWKik" height="1" width="1" alt=""/&gt;</content><summary>The ISO C++ standards meeting in November 2018 was held in San Diego, CA. As usual, Red Hat sent three of us to the meeting: me (for the Core Language Working Group), Jonathan Wakely (for the Library Working Group [LEWG]), and Thomas Rodgers (for the Concurrency and Parallelism Study Group [SG1]). I felt the meeting was productive, though some features that had been expected to make it into C++20 ...</summary><dc:creator>Jason Merrill</dc:creator><dc:date>2019-02-15T13:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/02/15/november-2018-iso-c-meeting-trip-report-core-language/</feedburner:origLink></entry><entry><title>Blog moved</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3Yo2BcaXmGI/blog-moved.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-blog_moved</id><updated>2019-02-15T10:57:17Z</updated><published>2019-02-15T10:57:00Z</published><content type="html">&lt;p&gt;We have moved the blog to our website. The new URL is &lt;a href="https://www.keycloak.org/blog.html"&gt;https://www.keycloak.org/blog.html&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This means we have a single tool to create online content and no longer need to deal with Blogger. It also means we have a proper review process in place (through GitHub).&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3Yo2BcaXmGI" height="1" width="1" alt=""/&gt;</content><summary>We have moved the blog to our website. The new URL is https://www.keycloak.org/blog.html. This means we have a single tool to create online content and no longer need to deal with Blogger. It also means we have a proper review process in place (through GitHub).</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2019-02-15T10:57:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2019/02/blog-moved.html</feedburner:origLink></entry><entry><title>Transitioning Red Hat SSO to a highly-available hybrid cloud deployment</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NRnlStK3ux8/" /><category term="dogfooding" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Galera" scheme="searchisko:content:tags" /><category term="jdg" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="MariaDB" scheme="searchisko:content:tags" /><category term="Red Hat Data Grid" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Data Grid" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><category term="Red Hat on Red Hat" scheme="searchisko:content:tags" /><category term="red hat single sign-on" scheme="searchisko:content:tags" /><category term="Red Hat SSO" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><author><name>Jared Blashka</name></author><id>searchisko:content:id:jbossorg_blog-transitioning_red_hat_sso_to_a_highly_available_hybrid_cloud_deployment</id><updated>2019-02-14T13:00:29Z</updated><published>2019-02-14T13:00:29Z</published><content type="html">&lt;p&gt;About two years ago, Red Hat IT finished &lt;a href="https://developers.redhat.com/blog/2016/10/04/how-red-hat-re-designed-its-single-sign-on-sso-architecture-and-why/"&gt;migrating our customer-facing authentication system&lt;/a&gt; to &lt;a href="https://access.redhat.com/products/red-hat-single-sign-on"&gt;Red Hat Single Sign-On&lt;/a&gt; (Red Hat SSO). As a result, we were quite pleased with the performance and flexibility of the new platform. Due to some architectural decisions that were made in order to optimize for uptime using the technologies at our disposal, we were unable to take full advantage of Red Hat SSO’s robust feature set until now. This article describes how we&amp;#8217;re now addressing database and session replication between global sites.&lt;/p&gt; &lt;p&gt;&lt;span id="more-561107"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Lessons from our first deployment&lt;/h2&gt; &lt;p&gt;Red Hat IT’s initial launch of multi-site SSO had each site completely independent of the other. While this facilitated the platform’s high uptime, it also resulted in a number of limitations hampering some new technologies.&lt;/p&gt; &lt;p&gt;The most problematic limitation was that active login sessions were stored only at a single site—the one where a user happened to authenticate. This meant that if that particular site had an outage, the user would have to reauthenticate upon redirection to another site. Reauthentication lead to a confusing and poor customer experience, especially during rolling site maintenance.&lt;/p&gt; &lt;p&gt;Furthermore, this architecture prevented the adoption of the OpenID Connect (OIDC) authorization code flow, regardless of it being fully supported in the Red Hat SSO product. The authorization code flow partially relies on server-to-server communication rather than on a user’s browser, as in the case of SAML or other OIDC flows. It was probable that the backend server request would not be routed to the same site that contained the active user session. This would result in the backend authorization code flow failing, leading to intermittent UI errors, at best.&lt;/p&gt; &lt;p&gt;Finally, other features of Red Hat SSO, such as offline OpenID Connect tokens and two-factor authentication (2FA) were simply unusable in this multi-site environment. By default, when a user associates an offline token or a new 2FA device with their account, Red Hat SSO persists this in the database. Without database replication between sites, this new association persists only in a single site, preventing the technology from correctly functioning in this environment.&lt;/p&gt; &lt;p&gt;Because of these and other issues, we knew that the next step forward would have to address database and session replication between sites.&lt;/p&gt; &lt;h3&gt;Working toward our future multi-site solution&lt;/h3&gt; &lt;p&gt;Working with the Red Hat SSO development team, the multi-site use cases and objectives were detailed. The team explored a number of potential solutions and ended up with the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.2/html/server_installation_and_configuration_guide/operating-mode#crossdc-mode"&gt;Cross-Datacenter Replication Mode&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Deploying Cross-Datacenter Replication Mode requires two major modifications to the existing architecture of a Red Hat SSO deployment. The first is migrating our database to Galera Cluster and the second is deploying &lt;a href="https://developers.redhat.com/products/datagrid/overview/"&gt;Red Hat Data Grid&lt;/a&gt; (formerly known as Red Hat JBoss Data Grid).&lt;/p&gt; &lt;h4&gt;Migrating to Galera Cluster&lt;/h4&gt; &lt;p&gt;Red Hat SSO already supports a &lt;a href="https://access.redhat.com/articles/2342861"&gt;number of databases&lt;/a&gt;, but the cross-datacenter replication mode requires synchronous replication between sites, ensuring data integrity and consistency across the entire deployment. For example, new user registrations at site A need to be immediately available at sites B and C to prevent additional duplicate user registrations and conflicting database records.&lt;/p&gt; &lt;p&gt;As of Red Hat SSO 7.2, the two solutions that have been tested in conjunction with the cross-datacenter mode are Oracle Database 12c Release 1 (12.1) RAC and MariaDB server version 10.1.19 with Galera; Red Hat IT’s deployment is using MariaDB with Galera Cluster. Each of the three sites has a pair of MariaDB Galera servers, so even in the event of a single site outage, we can still maintain a quorum majority.&lt;/p&gt; &lt;p&gt;The SSO clusters were already leveraging MariaDB as the RDBMS, but multi-site active/active required switching the entire cluster to Galera for cross-datacenter mode. Initially, each of the three sites had a pair of multi-master database hosts. Upgrading SSO clusters to Galera without an outage involved rolling through sites. The standard MariaDB multi-master replication would be disabled on each site’s DB cluster, and then the remaining DB servers were added to the Galera cluster. Following this, the local Red Hat SSO nodes were updated to use the DB servers now part of the Galera cluster. Finally, the last DB server was reinitialized and added to the Galera cluster.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/02/galera-1.gif"&gt;&lt;img class=" aligncenter wp-image-561457 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/02/galera-1.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/02/galera-1.gif" alt="Migrating to Galera Cluster" width="765" height="468" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This process was done so that we could perform the upgrade with zero downtime in any of our sites. This was made possible because the user data is handled by a distinct service and not mastered within Red Hat SSO. Had this not been true, the upgrade would have been more complicated. The Galera DB upgrade was done prior to implementing Red Hat Data Grid, so system performance could be closely monitored and backed out, if necessary.&lt;/p&gt; &lt;h4&gt;Deploying Red Hat Data Grid&lt;/h4&gt; &lt;p&gt;Red Hat SSO utilizes Infinispan for session storage, which comes bundled with &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt;. Red Hat Data Grid is the Red Hat supported version of Infinispan and has a standalone server distribution that is used in conjunction with JBoss EAP’s Infinispan to replicate cache data across all sites. Red hat Data Grid has explicit support for &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_data_grid/7.1/html/administration_and_configuration_guide/set_up_cross_datacenter_replication"&gt;Cross Datacenter Replication&lt;/a&gt; and offloading the replication concerns to a separate server helps minimize performance impact. Each Red Hat SSO instance is configured to use a local Red hat Data Grid cluster as a remote store for Infinispan. In turn, each Red Hat Data Grid cluster is aware of all the other Red Hat Data Grid clusters at the other sites. The Red Hat Data Grid clusters in each site form a grid, as the name implies, and replicate the SSO session cache among all sites. The Red Hat Data Grid data replication can be asynchronous, if you have an active/passive multi-site Red Hat SSO deployment, or synchronous for active/active deployments. Each of the Red Hat SSO sites has a three-node Red Hat Data Grid cluster, which ensures cross-site replication survives any single node failing.&lt;/p&gt; &lt;p&gt;Deploying Red Hat Data Grid required building net-new clusters of &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt; servers. Red Hat SSO does not support concurrently running Red Hat Data Grid and SSO on the same servers, nor would you want to do this. Creating and configuring these hosts was straightforward following the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.2/html/server_installation_and_configuration_guide/operating-mode#setup"&gt;basic setup steps&lt;/a&gt;, with a few minor modifications for our own purposes. One of the modifications was using a separate TCP stack—running on different ports for the local channel rather than using UDP, because some cloud providers don’t support multicast. Another modification was the use of asymmetric encryption and authentication, ensuring that user session data was encrypted and never exposed on the wire.&lt;/p&gt; &lt;p&gt;The configuration changes to the existing Red Hat SSO hosts followed the basic setup steps with little-to-no modifications. The cleanest way to deploy these changes in this environment was to bring down a single site entirely, stopping the Red Hat SSO service across all SSO servers within a site. Configurations were then updated and the Red Hat SSO service was brought back up one host at a time. This procedure ensured that all entries in the local cluster cache would be present in the Red Hat Data Grid cache. Otherwise, errors were occasionally encountered when starting hosts, because they could not reconcile local cache contents with the remote-store Red Hat Data Grid contents. Following this procedure, active sessions were lost on a rolling basis, but no customer-facing outage was incurred.&lt;/p&gt; &lt;h4&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/02/jdg-1.gif"&gt;&lt;img class=" aligncenter wp-image-561467 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/02/jdg-1.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/02/jdg-1.gif" alt="Deploying Red Hat Data Grid" width="1005" height="647" /&gt;&lt;/a&gt;&lt;/h4&gt; &lt;h4&gt;&lt;/h4&gt; &lt;h4&gt;Measuring and monitoring performance&lt;/h4&gt; &lt;p&gt;There were some initial concerns about the performance and stability of cross-site synchronous replication—both on the database level, as well as on the application cache level. Sufficient monitoring had to be in place to create an alert if performance degrades.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/jmxtrans/jmxtrans-agent"&gt;JMXtrans Agent&lt;/a&gt; is very useful for taking metrics typically exposed only via JMX Infinispan cache performance, garbage collection, and memory/thread utilization and aggregating them in a tool like &lt;a href="https://graphiteapp.org/"&gt;Graphite&lt;/a&gt;. In combination with &lt;a href="https://collectd.org/"&gt;collectd&lt;/a&gt; and the Graphite plugin, it was easy to snapshot all relevant host statistics. Moreover, combining this with&lt;a href="https://metrics.dropwizard.io/4.0.0/"&gt; Dropwizard Metrics&lt;/a&gt; for instrumentation of all Red Hat SSO customizations gives a comprehensive view into the complete stack.&lt;/p&gt; &lt;p&gt;Groovy scripts are also a great way to quickly leverage any attributes or operations exposed via a JMX MBean. For example, internally we utilize a number of Groovy scripts. These are tied into monitoring and reporting the status of the CacheContainerHealth component, monitoring the memory levels, and alerting if garbage collection isn’t able to reclaim sufficient space, as well as checking the cross-site replication status for all the configured caches. These result in quick action if servers are suddenly unavailable. Groovy scripts also make it simple to automate more-complex procedures, such as initiating &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_data_grid/7.1/html/administration_and_configuration_guide/set_up_cross_datacenter_replication#state_transfer_between_sites"&gt;state transfer&lt;/a&gt; between sites after recovery has completed.&lt;/p&gt; &lt;p&gt;In conclusion, Cross-Datacenter Replication Mode for Red Hat SSO allows Red Hat IT to scale its authentication systems globally while providing an extremely high level of resiliency and availability. By leveraging supported, open source technologies, Red Hat has built a true multi-site single sign-on authentication platform capable of handling next-generation applications.&lt;/p&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/19/sso-made-easy-keycloak-rhsso/"&gt;Single Sign-On Made Easy with Keycloak/Red Hat SSO&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/videos/youtube/mdZauKsMDiI/"&gt;Securing apps and services with Keycloak/Red Hat SSO (DevNation Live Video)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/videos/youtube/ZxpY_zZ52kU/"&gt;A deep dive into Keycloak/Red Hat SSO (DevNation Live Video)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/02/07/red-hat-single-sign-on-give-it-a-try-for-no-cost/"&gt;Red Hat Single Sign-On: Give it a try for no cost!&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2016/10/04/how-red-hat-re-designed-its-single-sign-on-sso-architecture-and-why/"&gt;How Red Hat re-designed its Single Sign On (SSO) architecture, and why&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/html/server_administration_guide/"&gt;Red Hat Single Sign-On Server Administration Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/html/securing_applications_and_services_guide/"&gt;Red Hat Single Sign-On Securing Applications and Services Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/02/06/using-a-public-certificate-with-red-hat-single-sign-on-keycloak/"&gt;Using a public certificate with Red Hat Single Sign-On/Keycloak&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;b&gt;About the Author&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;a href="https://www.linkedin.com/in/jblashka/"&gt;Jared Blashka&lt;/a&gt; is a Senior Software Applications Engineer on the Red Hat IT Identity and Access Management team.  He is a &lt;a href="https://www.redhat.com/rhtapps/services/verify/?certId=140-181-223"&gt;Red Hat Certified Engineer&lt;/a&gt; and has 8 years of experience, focusing on identity management, application lifecycle management, and automation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#38;linkname=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F14%2Fred-hat-sso-high-availability-hybrid-cloud%2F&amp;#038;title=Transitioning%20Red%20Hat%20SSO%20to%20a%20highly-available%20hybrid%20cloud%20deployment" data-a2a-url="https://developers.redhat.com/blog/2019/02/14/red-hat-sso-high-availability-hybrid-cloud/" data-a2a-title="Transitioning Red Hat SSO to a highly-available hybrid cloud deployment"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/02/14/red-hat-sso-high-availability-hybrid-cloud/"&gt;Transitioning Red Hat SSO to a highly-available hybrid cloud deployment&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NRnlStK3ux8" height="1" width="1" alt=""/&gt;</content><summary>About two years ago, Red Hat IT finished migrating our customer-facing authentication system to Red Hat Single Sign-On (Red Hat SSO). As a result, we were quite pleased with the performance and flexibility of the new platform. Due to some architectural decisions that were made in order to optimize for uptime using the technologies at our disposal, we were unable to take full advantage of Red Hat S...</summary><dc:creator>Jared Blashka</dc:creator><dc:date>2019-02-14T13:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/02/14/red-hat-sso-high-availability-hybrid-cloud/</feedburner:origLink></entry><entry><title>What is new in HAL 3.1.2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pCy7C43-nfw/" /><category term="feed_group_name_wildfly" scheme="searchisko:content:tags" /><category term="feed_name_hal" scheme="searchisko:content:tags" /><author><name>Harald Pehl</name></author><id>searchisko:content:id:jbossorg_blog-what_is_new_in_hal_3_1_2</id><updated>2019-02-14T06:30:25Z</updated><published>2019-02-14T06:30:25Z</published><content type="html">HAL 3.1.2 is released and packaged as part of Wildfly 16 (which is in Candidate Release as of now and soon will release a Final). HAL 3.1.2 brings many new features, bug fixes and enhancements, checkout the release notes since HAL 3.0.6, which is the version packaged in Wildfly 14 and 15. The new and noteworthy features are: Support socket log handler Show logs from logging-profile in log viewer Display microprofile health checks Expose CA management operations for key-store and certificate-authority-account Enhance the SSL Wizard to add support to LetsEncrypt CA Support runtime operations for messaging servers Add support to remote ActiveMQ server Display the the network open ports Show active management operation from hosts and servers in a central place Show unresponsive controller better Basic support to MicroProfile Metrics and Config If you find any problem, bug or have a suggestion on how to improve HAL, please open an issue or contact us.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pCy7C43-nfw" height="1" width="1" alt=""/&gt;</content><summary>HAL 3.1.2 is released and packaged as part of Wildfly 16 (which is in Candidate Release as of now and soon will release a Final). HAL 3.1.2 brings many new features, bug fixes and enhancements, checkout the release notes since HAL 3.0.6, which is the version packaged in Wildfly 14 and 15. The new and noteworthy features are: Support socket log handler Show logs from logging-profile in log viewer D...</summary><dc:creator>Harald Pehl</dc:creator><dc:date>2019-02-14T06:30:25Z</dc:date><feedburner:origLink>https://hal.github.io/blog/whats-new-hal-312/</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 04/2019</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/623BDwMPrik/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_04_2019</id><updated>2019-02-15T07:57:31Z</updated><published>2019-02-14T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Okta developer blog published &lt;a href="https://developer.okta.com/blog/2019/02/01/spring-hibernate-guide"&gt;an article&lt;/a&gt; about using Hibernate with Spring Boot while also securing the application with OAuth 2.0.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate allows you to map the natural business key via the &lt;code&gt;@NaturalId&lt;/code&gt; annotation. &lt;a href="https://dzone.com/articles/how-to-use-hibernate-natural-ids-in-spring-boot"&gt;This article&lt;/a&gt; explains how to expose the Hibernate-specific natural identifier API via the Spring Data &lt;code&gt;Repository&lt;/code&gt; contract.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you need to map a given entity property to a JSON column, you can use the &lt;a href="https://github.com/vladmihalcea/hibernate-types"&gt;&lt;code&gt;hibernate-types&lt;/code&gt;&lt;/a&gt; project as it provides support for both &lt;code&gt;String&lt;/code&gt; and binary JSON column types. For more details about mapping a &lt;code&gt;String&lt;/code&gt; property to a JSON column, check out &lt;a href="https://vladmihalcea.com/map-string-jpa-property-json-column-hibernate/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you’re using Hibernate with Spring Boot, &lt;a href="https://dzone.com/articles/best-performance-practices-for-hibernate-5-and-spr-1"&gt;this article&lt;/a&gt; explains various optimizations you can make to speed up application performance.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For our Korean readers, &lt;a href="http://kwonnam.pe.kr/wiki/java/hibernate/performance"&gt;this article&lt;/a&gt; provides a list of resources you can use to learn more about Hibernate Performance Tuning.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When using JPA and Hibernate, you can call a database stored procedure using either the JPA &lt;code&gt;StoredProcedureQuery&lt;/code&gt; or the Hibernate-specific &lt;code&gt;ProcedureCall&lt;/code&gt;. &lt;a href="https://vladmihalcea.com/best-way-call-stored-procedure-jpa-hibernate/"&gt;This article&lt;/a&gt; explains how the underlying &lt;code&gt;CallableStatement&lt;/code&gt; is handled by Hibernate and the best way to close the associated JDBC resources as soon as possible.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Lombok frameworks can generate the &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; methods on your behalf. However, for JPA entities, there are several considerations to keep in mind, and &lt;a href="https://mdeinum.github.io/2019-02-13-Lombok-Data-Ojects-Arent-Entities/"&gt;this article&lt;/a&gt; explains you the best way to generate &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; with Lombok when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To declare the transaction boundaries declaratively, you can use the &lt;code&gt;@Transactional&lt;/code&gt; annotation. &lt;a href="https://codete.com/blog/5-common-spring-transactional-pitfalls/"&gt;This article&lt;/a&gt; explains how the &lt;code&gt;@Transactional&lt;/code&gt; works in Spring and how to get the best out of it.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2185"&gt;Hibernate @OneToMany association with Lazy Loading and Cascade.ALL is fetched eagerly&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2205"&gt;Is it possible to use Hibernate Envers asynchronously?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2210"&gt;Hibernate @ManyToMany with FetchMode.JOIN and FetchType.EAGER generates secondary queries&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2219"&gt;How to fix “org.hibernate.QueryException: query specified join fetching, but the owner of the fetched association was not present in the select list”&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2252"&gt;Why does the JPA @ManyToMany association remove all entries and reinserts the remaining ones back upon modifications&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2277"&gt;Handling Proxy Types Correctly for Inheriting Stored Types&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2272"&gt;Polymorphic associations with Hibernate and Relational Database&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2265"&gt;Join unrelated entities using JPA or Hibernate Criteria&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2225"&gt;Hibernate Envers ValidityAuditStrategy throws a “Cannot update previous revision for entity” exception&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2227"&gt;Hibernate Envers performance overhead&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/2208"&gt;Hibernate.default_schema usage in Hibernate 5&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/27799455/54528693#54528693"&gt;Hibernate creating N+1 queries for @ManyToOne JPA annotated property&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/54552156/54556567#54556567"&gt;@Where with @SecondaryTable does not work with Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/50316970/"&gt;The JPA createStoredProcedureQuery throws “ORA-01000: maximum open cursors exceeded” when using Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/54674418/54687050#54687050"&gt;Hibernate performs N+1 selects instead of 1 query when using the Query Cache&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/623BDwMPrik" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Articles The Okta developer blog published an article about using Hibernate with Spring Boot while also securing the application with OAuth 2.0. Hibernate allows you to map the natural business key via the @NaturalId annotation. This article expl...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2019-02-14T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2019/02/14/hibernate-community-newsletter-2019-04/</feedburner:origLink></entry><entry><title>Full integration to Salesforce with Red Hat Integration (Part 2)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/u8UrMvUT1Ns/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="API" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Fuse online" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="SalesForce" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-full_integration_to_salesforce_with_red_hat_integration_part_2</id><updated>2019-02-13T13:00:55Z</updated><published>2019-02-13T13:00:55Z</published><content type="html">&lt;p&gt;This article is the second in a series of three articles about Red Hat Integration. The &lt;a href="https://developers.redhat.com/blog/2019/02/11/red-hat-integration-effortless-api-creation"&gt;first article&lt;/a&gt; described how the new Red Hat Integration bundle allows citizen integrators to quickly provide an API through tools that make creating an API in five simple steps effortless, and we implemented a demo showing the full API lifecycle on Red Hat Integration. The demo was about providing wine labeling and ranking info via APIs.&lt;/p&gt; &lt;p&gt;In this article, I am going to take you further by implementing a real business transaction with Salesforce. We will create an event-driven integration solution with &lt;em&gt;no code&lt;/em&gt; on Red Hat Integration.&lt;/p&gt; &lt;p&gt;The idea of this demo is to receive an order from the client web application through a gated, secured API that will then process the order and forward the needed data to the corresponding Salesforce modules. From there, Salesforce will take care of the order content.&lt;span id="more-554607"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-15-at-2.46.52-PM.png"&gt;&lt;img class=" aligncenter wp-image-559797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-15-at-2.46.52-PM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-15-at-2.46.52-PM.png" alt="Creating an event-driven integration solution with no code on Red Hat Integration" width="640" height="259" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-15-at-2.46.52-PM.png 640w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-15-at-2.46.52-PM-300x121.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;If you would like to know how the API is built and implemented, please check the &lt;a href="https://developers.redhat.com/blog/2019/02/11/red-hat-integration-effortless-api-creation"&gt;first article&lt;/a&gt;. In this article, I will be focusing on how to integrate with Salesforce using an event-driven approach.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM.png"&gt;&lt;img class=" aligncenter wp-image-559817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM-1024x528.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM-1024x528.png" alt="Integrating with Salesforce using an event-driven approach" width="640" height="330" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM-1024x528.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM-300x155.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM-768x396.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Screen-Shot-2019-01-16-at-2.23.37-PM.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Creating an order in Salesforce requires many steps. The first is to set up an account for every user and define the contract of each user. After that, we are ready to create the order, but the details of the order need to be handled separately to associate it with price book entries. Each step I describe requires the output of previous steps. So we should build our application in an asynchronous way to avoid long-hanging processes. To set up for the event-driven system, we need a medium of some sort to hold and distribute the events; it could be a messaging broker or a streaming platform. Here, I will just use a broker for the sake of simplicity.&lt;/p&gt; &lt;p&gt;Basically, we will be using the broker to gather all the events calls from the API, handle returning the result from Salesforce, and pass the result on to the next step. If we break the entire process down, this is what is happening:&lt;/p&gt; &lt;p&gt;1. Receive incoming request.&lt;/p&gt; &lt;p&gt;2. Wait for incoming request and create an account in Salesforce with the username.&lt;/p&gt; &lt;p&gt;3. Wait for successful account creation and then create a contract in Salesforce using the account ID.&lt;/p&gt; &lt;p&gt;4. Wait for successful contract creation and then create an order using both the account ID and the contract ID.&lt;/p&gt; &lt;p&gt;5. After the order has been created, add a product order entry to the order&lt;/p&gt; &lt;p&gt;So if we implement this event-driven integration solution, we will have five perfectly modularized integration &lt;a href="https://developers.redhat.com/blog/category/microservices/"&gt;microservices&lt;/a&gt; running and ready to handle the events, as shown in the following diagram.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven.png"&gt;&lt;img class=" aligncenter wp-image-559867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven-1024x847.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven-1024x847.png" alt="Five perfectly modularized micro-integration services to handle the events" width="640" height="529" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven-1024x847.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven-300x248.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven-768x635.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/eventdriven.png 1204w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In addition to placing the order in Salesforce, we also want to notify the customer via email when the order is done. A template can be used in &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse Online&lt;/a&gt; to make sure the format of the email is consistent. To apply the data from the integration solution into the template, we can use the placeholder along with static boilerplate text for the email.&lt;/p&gt; &lt;p&gt;Watch this video to see how I created the integration solution. And here is the link to my repo that contains everything you need to re-create the &lt;a href="https://github.com/weimeilin79/fuseonlinewine"&gt;demo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/-buHj8_Qbh4?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;start=3&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Have fun!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#38;linkname=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F13%2Fred-hat-integration-salesforce%2F&amp;#038;title=Full%20integration%20to%20Salesforce%20with%20Red%20Hat%20Integration%20%28Part%202%29" data-a2a-url="https://developers.redhat.com/blog/2019/02/13/red-hat-integration-salesforce/" data-a2a-title="Full integration to Salesforce with Red Hat Integration (Part 2)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/02/13/red-hat-integration-salesforce/"&gt;Full integration to Salesforce with Red Hat Integration (Part 2)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/u8UrMvUT1Ns" height="1" width="1" alt=""/&gt;</content><summary>This article is the second in a series of three articles about Red Hat Integration. The first article described how the new Red Hat Integration bundle allows citizen integrators to quickly provide an API through tools that make creating an API in five simple steps effortless, and we implemented a demo showing the full API lifecycle on Red Hat Integration. The demo was about providing wine labeling...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2019-02-13T13:00:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/02/13/red-hat-integration-salesforce/</feedburner:origLink></entry><entry><title>and 4.0.17</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bms583XgLic/and-4017.html" /><category term="feed_group_name_jgroups" scheme="searchisko:content:tags" /><category term="feed_name_belasblog" scheme="searchisko:content:tags" /><category term="kubernetes cloud graceful leaving" scheme="searchisko:content:tags" /><author><name>Bela Ban</name></author><id>searchisko:content:id:jbossorg_blog-and_4_0_17</id><updated>2019-02-13T11:14:18Z</updated><published>2019-02-13T11:13:00Z</published><content type="html">Sorry for the short release cycle between 4.0.16 and 4.0.17, but there was an important feature in 4.0.17, which I wanted to release as soon as possible: &lt;a href="https://issues.jboss.org/browse/JGRP-2293"&gt;JGRP-2293&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This has better support for concurrent graceful leaves of multiple members (also coordinators), which is important in cloud environments, where pods are started and stopped dynamically by Kubernetes.&lt;br /&gt;&lt;br /&gt;Not having this enhancement would lead to members leaving gracefully, but that would sometimes not be recognized and failure detection would have to kick in to exclude those members and installing the correct views. This would slow down things, and the installing of new views would be goverened by the timeouts in the failure detection protocols (FD_ALL, FD_SOCK). On top of this, in some edge cases, MERGE3 would have to kick in and fix views, further slowing things down.&lt;br /&gt;&lt;br /&gt;There's a unit test [1] which tests the various aspects of concurrent leaving, e.g. all coordinators leaving sequentially, multiple members leaving concurrently etc &lt;br /&gt;&lt;br /&gt;I recommend installing this version as soon as possible, especially if you run in the cloud. Questions / problems etc -&amp;gt; [2]&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;&lt;br /&gt;[1] https://github.com/belaban/JGroups/blob/master/tests/junit-functional/org/jgroups/tests/LeaveTest.java&lt;br /&gt;&lt;br /&gt;[2] https://groups.google.com/forum/#!forum/jgroups-dev&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bms583XgLic" height="1" width="1" alt=""/&gt;</content><summary>Sorry for the short release cycle between 4.0.16 and 4.0.17, but there was an important feature in 4.0.17, which I wanted to release as soon as possible: JGRP-2293. This has better support for concurrent graceful leaves of multiple members (also coordinators), which is important in cloud environments, where pods are started and stopped dynamically by Kubernetes. Not having this enhancement would l...</summary><dc:creator>Bela Ban</dc:creator><dc:date>2019-02-13T11:13:00Z</dc:date><feedburner:origLink>http://belaban.blogspot.com/2019/02/and-4017.html</feedburner:origLink></entry><entry><title>Monitor active management operations and detect non-progressing operations</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AX5m5NAqzPQ/" /><category term="feed_group_name_wildfly" scheme="searchisko:content:tags" /><category term="feed_name_hal" scheme="searchisko:content:tags" /><author><name>Harald Pehl</name></author><id>searchisko:content:id:jbossorg_blog-monitor_active_management_operations_and_detect_non_progressing_operations</id><updated>2019-02-13T06:30:25Z</updated><published>2019-02-13T06:30:25Z</published><content type="html">A management operation is when any api client that connects to the Wildfly kernel and run operations to read from a running server or write a configuration. Examples of a management operation: Add a datasource. Deploy an application. Change the undertow buffer pool. A domain controller updates a slave server configuration. Host/Server synchronization. The following tasks are not management operations: A HTTP request from a browser to a deployed application.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AX5m5NAqzPQ" height="1" width="1" alt=""/&gt;</content><summary>A management operation is when any api client that connects to the Wildfly kernel and run operations to read from a running server or write a configuration. Examples of a management operation: Add a datasource. Deploy an application. Change the undertow buffer pool. A domain controller updates a slave server configuration. Host/Server synchronization. The following tasks are not management operati...</summary><dc:creator>Harald Pehl</dc:creator><dc:date>2019-02-13T06:30:25Z</dc:date><feedburner:origLink>https://hal.github.io/blog/management-operations/</feedburner:origLink></entry><entry><title>JHipster generator for jBPM Business Apps</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/cfNW1ZF-3bU/jhipster-generator-for-jbpm-business.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-jhipster_generator_for_jbpm_business_apps</id><updated>2019-02-12T14:32:03Z</updated><published>2019-02-12T14:31:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-FVlTZTGL_7s/XGLYgzdpO0I/AAAAAAAAhz8/-boY8DhDmM02jNv2rJGF3dpGRwGD1EHoQCLcBGAs/s1600/Screen%2BShot%2B2019-02-12%2Bat%2B9.22.17%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="434" data-original-width="1564" height="110" src="https://1.bp.blogspot.com/-FVlTZTGL_7s/XGLYgzdpO0I/AAAAAAAAhz8/-boY8DhDmM02jNv2rJGF3dpGRwGD1EHoQCLcBGAs/s400/Screen%2BShot%2B2019-02-12%2Bat%2B9.22.17%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;If you are a fan of &lt;a href="http://www.jhipster.tech/"&gt;JHipster&lt;/a&gt; you can now generate &lt;a href="http://jbpm.org/businessapps/gettingStarted.html"&gt;jBPM Business apps with it!&lt;/a&gt;&amp;nbsp;We created a &lt;a href="https://www.npmjs.com/package/generator-jba"&gt;generator module&lt;/a&gt; for it which you can use as follows:&lt;br /&gt;&lt;br /&gt;With &lt;b&gt;Yarn&lt;/b&gt;:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;yarn global add generator-jba&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Or with &lt;b&gt;NPM&lt;/b&gt;:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;npm install -g generator-jba&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Once installed generate your app with:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;yo jba&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;and follow the questions. If you want to generate the app with default settings, run:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;yo jba --quick=true&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/i&gt;&lt;i&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/i&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/cfNW1ZF-3bU" height="1" width="1" alt=""/&gt;</content><summary>If you are a fan of JHipster you can now generate jBPM Business apps with it! We created a generator module for it which you can use as follows: With Yarn: yarn global add generator-jba Or with NPM: npm install -g generator-jba Once installed generate your app with: yo jba and follow the questions. If you want to generate the app with default settings, run: yo jba --quick=true</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2019-02-12T14:31:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/02/jhipster-generator-for-jbpm-business.html</feedburner:origLink></entry><entry><title>Algorithms != Programs and Programs are not “One size fits all”</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9UJ92-dZHp0/" /><category term="big O notation" scheme="searchisko:content:tags" /><category term="education" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="HPC" scheme="searchisko:content:tags" /><category term="optimization" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><author><name>William Cohen</name></author><id>searchisko:content:id:jbossorg_blog-algorithms_programs_and_programs_are_not_one_size_fits_all</id><updated>2019-02-12T13:00:34Z</updated><published>2019-02-12T13:00:34Z</published><content type="html">&lt;div&gt;You&amp;#8217;ve probably been taught that picking an algorithm that has the best Big-&lt;em&gt;O&lt;/em&gt; asymptotic cost will yield the best performance. You might be surprised to find that on current hardware, this isn&amp;#8217;t always the case. Much of algorithmic analysis assumes very simple costs where the order of operations doesn&amp;#8217;t matter. Memory access times are assumed to be the same. However, the difference between a cache hit (a few processor clock cycles) and a cache miss that requires access to main memory (&lt;a href="https://www.akkadia.org/drepper/cpumemory.pdf"&gt;a couple hundred cycles&lt;/a&gt;) is immense.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;This article series is the result of the authors (William Cohen and Ben Woodard) discussion that there is a disconnect on the typical ideas of algorithm efficiency taught in computer science and computer engineering versus what is currently encountered in actual computer systems.&lt;/div&gt; &lt;p&gt;&lt;span id="more-556157"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Introduction&lt;/h2&gt; &lt;div&gt;What is the best way to implement a sort? If you paid attention in your algorithms and data structures class you might quickly answer “&lt;a href="https://en.wikipedia.org/wiki/Quicksort"&gt;Quicksort&lt;/a&gt;”. However, the correct answer might be more complicated and depend on specific details. No one would ever advocate using the Quicksort algorithm to sort an unordered list containing only two items. This could be more efficiently and simply done with a compare and conditional swap to reorder the elements if needed. The advantages of the Quicksort algorithm would only become apparent when the number of elements to sort is much larger. However, other sorting algorithms such as &lt;a href="https://en.wikipedia.org/wiki/Merge_sort"&gt;merge sort&lt;/a&gt; might be preferred over the Quicksort algorithm even though both have the same average complexity, &lt;em&gt;O(n log n)&lt;/em&gt;, due to merge sort having better real-world performance. Incorrect assumptions developers might make during the selection of algorithms and implementing them in programs that can adversely affect performance.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;a href="https://en.wikipedia.org/wiki/Big_O_notation"&gt;Big-&lt;em&gt;O&lt;/em&gt; notation&lt;/a&gt; has often been used as the measure of goodness for an algorithm and as a tool to predict how a part of the program will behave in the physical world where programs actually operate. However, the simple sequential models used for big-&lt;em&gt;O&lt;/em&gt; analysis do not accurately represent current computer system costs. Modern computer hardware can overlap operations and individual memory access costs can vary immensely (&lt;a href="https://akkadia.org/drepper/cpumemory.pdf"&gt;by a factor of one hundred or more&lt;/a&gt;) depending on the memory access patterns. High-performance machines can perform multi-element, vector-style operations with much higher throughput than doing the equivalent individual operations separately. The differences between the abstract model and the physical hardware could lead to very noticeable differences in delivered performance. For example iterating through elements in a linked list and array are both &lt;em&gt;O(n)&lt;/em&gt; complexity, but on modern processors hardware it is much slower iterating through the elements in a linked list because of the random memory access pattern than iterating through an equivalent one-dimensional array of elements with the regular, easily predicted memory access pattern.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Big-&lt;em&gt;O&lt;/em&gt; asymptotic algorithm analysis is showing how the computational work grows in proportional to the problem size growth. However, this does not indicate which algorithm is most efficient for a particular problem size. The lack of constants makes that comparison between algorithms working on a particular problem size difficult. An algorithm that has worse big-&lt;em&gt;O&lt;/em&gt; asymptotic performance than another algorithm might have better performance for smaller problem sizes. Given that cache misses cost hundreds of cycles the range of problems sizes where the “worse” algorithm is faster may be surprisingly large. Algorithms such as &lt;a href="https://en.wikipedia.org/wiki/Coppersmith%E2%80%93Winograd_algorithm"&gt;Coppersmith-Winograd matrix multiplication algorithm&lt;/a&gt; &lt;em&gt;(O(n^2.375477))&lt;/em&gt; are theoretically more efficient than the naive implementation of matrix multiply &lt;em&gt;(O(n^3))&lt;/em&gt; but the problem size needs to be so large to provide an advantage that they are not used in practice.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Those constants that are so often ignored for big-&lt;em&gt;O&lt;/em&gt; analysis have significant impact on efficiency and power use. For a battery powered tablet playing a video they could make the difference between being able to keep yourself entertained with videos for an entire eight hour transatlantic flight and only being able watch an single two hour movie before the battery is dead. At the other extreme for a high-performance computer system using millions of dollars of electricity each year the power might be a significant portion of the operating cost and there is great pressure to minimize those costs.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Many programmers attempt to use parallel processing to obtain faster performance. At best parallel computers will speed up the program proportional to the number of processors in the system. For parallel computer systems it makes little sense to run a program across multiple processors if it yields no performance improvement over running on a single processor. If care is not taken writing the code, it is quite possible that the overhead to make the program run across multiple processors ends up making the parallel version of the program slower than the basic serial version. You can use your favorite search engine and find many examples of &amp;#8220;parallel program slower than sequential program&amp;#8221;.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Programmers are much more familiar with the simple programming model similar to the ones used for big-&lt;em&gt;O&lt;/em&gt; analysis where the order of operations is not important and the operations have the same low costs. For high-performance computers these assumptions do not hold. How operations are grouped can impact cost and there can be orders of magnitudes difference in the cost of operations.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;h2&gt;Coming articles&lt;/h2&gt; &lt;div&gt;We&amp;#8217;re starting a series of articles that will talk about some of the high performance computing issues such as data layout, task granularity, load balancing, and contention. The goal of these articles is to help eliminate some of the assumptions that might have based on traditional simplified program models and steer people toward writing more efficient code for modern computers.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;While these topics are typically considered to be in the domain of high performance computing (HPC), this discussion are generally applicable. Each year, features from HPC trickle down to more traditional environments. For example vector processing was only found on supercomputers in the 80&amp;#8217;s and 90&amp;#8217;s, but now every virtually every laptop, desktop, and server computer has vector processing support and there are software libraries to use these capabilities.&lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#38;linkname=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F02%2F12%2Falgorithms-vs-programs%2F&amp;#038;title=Algorithms%20%21%3D%20Programs%20and%20Programs%20are%20not%20%E2%80%9COne%20size%20fits%20all%E2%80%9D" data-a2a-url="https://developers.redhat.com/blog/2019/02/12/algorithms-vs-programs/" data-a2a-title="Algorithms != Programs and Programs are not “One size fits all”"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/02/12/algorithms-vs-programs/"&gt;Algorithms != Programs and Programs are not &amp;#8220;One size fits all&amp;#8221;&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9UJ92-dZHp0" height="1" width="1" alt=""/&gt;</content><summary>You’ve probably been taught that picking an algorithm that has the best Big-O asymptotic cost will yield the best performance. You might be surprised to find that on current hardware, this isn’t always the case. Much of algorithmic analysis assumes very simple costs where the order of operations doesn’t matter. Memory access times are assumed to be the same. However, the difference between a cache...</summary><dc:creator>William Cohen</dc:creator><dc:date>2019-02-12T13:00:34Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/02/12/algorithms-vs-programs/</feedburner:origLink></entry></feed>
